{
  "resourceType": "TestScript",
  "id": "92446d93-ec60-4151-b550-3ef6a1b37e08",
  "meta": {
    "profile": [
      "http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"
    ]
  },
  "url": "http://build.fhir.org/ig/hl7dk/dk-medcom/",
  "status": "active",
  "date": "2021-11-01",
  "publisher": "MedCom",
  "contact": [
    {
      "name": "MedCom",
      "telecom": [
        {
          "system": "email",
          "value": "fhir@medcom.dk",
          "use": "work"
        }
      ]
    }
  ],
  "copyright": "MedCom 2021",
  "name": "medcom-Acknowledgement-transient-error-xml-json",
  "title": "medcom-Acknowledgement-transient-error",
  "description": "Testing correct use of acknowledgment",
  "origin": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types",
        "code": "FHIR-Client"
      }
    }
  ],
  "destination": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
        "code": "FHIR-Server"
      }
    }
  ],
  "fixture": [
    {
      "id": "bundle-create-STIN",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/HSN.xml"
      }
    },
    {
      "id": "bundle-create-ack-transient-error",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/ACK-transient-error.xml"
      }
    }
  ],
  "profile": [
    {
      "id": "acknowledgment-profile",
      "reference": "http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-messaging-acknowledgement"
    }
  ],
  "variable": [
    {
      "name": "destinationUri",
      "expression": "Bundle.entry.resource.ofType(MessageHeader).destination.endpoint",
      "sourceId": "bundle-create-STIN"
    },
    {
      "name": "bundleResourceid",
      "expression": "Bundle.id",
      "sourceId": "bundle-create-STIN"
    },
    {
      "name": "MessageHeaderIdentifier",
      "expression": "Bundle.entry[0].fullUrl",
      "sourceId": "bundle-create-STIN"
    },
    {
      "name": "headerResourceReference",
      "expression": "Bundle.entry[0].fullUrl",
      "sourceId": "bundle-create-ack-transient-error"
    }
  ],
  "setup": {
    "action": [
      {
        "operation": {
          "type": {
            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
            "code": "create"
          },
          "resource": "Bundle",
          "description": "Create the Bundle resource in XML format on the destination server.",
          "accept": "xml",
          "encodeRequestUrl": true,
          "params": "?message.destination-uri=${destinationUri}",
          "contentType": "xml",
          "sourceId": "bundle-create-STIN"
        }
      },
      {
        "assert": {
          "description": "Confirm that the returned HTTP status is 201(Created).",
          "direction": "response",
          "responseCode": "201",
          "warningOnly": false
        }
      }
    ]
  },
  "test": [
    {
      "id": "01-ACK-get-HN",
      "name": "Get-HospitalNotification",
      "description": "GET a Hospital notification",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "read"
            },
            "resource": "Bundle",
            "description": "Receive notification about admission",
            "accept": "xml",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "params": "?message.destination-uri=${destinationUri}",
            "responseId": "Hn-get"
          }
        },
        {
          "assert": {
            "description": "Confirm that the returned HTTP status is 200(OK).",
            "direction": "response",
            "responseCode": "200",
            "warningOnly": false
          }
        }
      ]
    },
    {
      "id": "02-ACK-01-transient-error",
      "name": "Post Acknowledgement",
      "description": "GET a Hospital notification",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a acknowledgement",
            "accept": "xml",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "sourceId": "bundle-create-ack-transient-error"
          }
        },
        {
          "assert": {
            "description": "Confirm that the client request payload contains a Bundle resource type.",
            "direction": "request",
            "resource": "Bundle",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the MessageHeader response code is transient-error",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(MessageHeader).response.code",
            "operator": "equals",
            "value": "transient-error",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle containing a OperationOutcome",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(OperationOutcome).exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the MessageHeader.response.identifier is equal to Id of original message ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(MessageHeader).response.identifier",
            "operator": "equals",
            "value": "${bundleResourceid}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the reference original Provenance.entity.what is equal to Id of original messageheader.identifier",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${MessageHeaderIdentifier}')",
            "warningOnly": false
          }
        }
      ]
    }
  ]
}
