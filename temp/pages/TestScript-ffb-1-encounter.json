{
  "resourceType": "TestScript",
  "id": "ffb-1-encounter",
  "meta": {
    "profile": [
      "http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"
    ]
  },
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative</b></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource \"ffb-1-encounter\" </p><p style=\"margin-bottom: 0px\">Profile: <code>http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript</code></p></div><p><b>url</b>: <code>http://build.fhir.org/ig/hl7dk/dk-medcom/</code></p><p><b>version</b>: 0.1.0</p><p><b>name</b>: First documentation phase</p><p><b>title</b>: First documentation phase</p><p><b>status</b>: active</p><p><b>date</b>: 2021-11-01</p><p><b>publisher</b>: MedCom</p><p><b>contact</b>: MedCom: <a href=\"mailto:fhir@medcom.dk\">fhir@medcom.dk</a></p><p><b>description</b>: Testing correct use of First documentation phase</p><p><b>copyright</b>: MedCom 2021</p><h3>Origins</h3><table class=\"grid\"><tr><td>-</td><td><b>Index</b></td><td><b>Profile</b></td></tr><tr><td>*</td><td>1</td><td>FHIR Client (Details: http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types code FHIR-Client = 'FHIR Client', stated as 'null')</td></tr></table><h3>Destinations</h3><table class=\"grid\"><tr><td>-</td><td><b>Index</b></td><td><b>Profile</b></td></tr><tr><td>*</td><td>1</td><td>FHIR Server (Details: http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types code FHIR-Server = 'FHIR Server', stated as 'null')</td></tr></table><blockquote><p><b>fixture</b></p><p><b>autocreate</b>: false</p><p><b>autodelete</b>: false</p><p><b>resource</b>: <a href=\"/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/01Encounter.xml\">/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/01Encounter.xml</a></p></blockquote><blockquote><p><b>fixture</b></p><p><b>autocreate</b>: false</p><p><b>autodelete</b>: false</p><p><b>resource</b>: <a href=\"/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/02Encounter.xml\">/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/02Encounter.xml</a></p></blockquote><blockquote><p><b>fixture</b></p><p><b>autocreate</b>: false</p><p><b>autodelete</b>: false</p><p><b>resource</b>: <a href=\"/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/03Encounter.xml\">/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/03Encounter.xml</a></p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: municipalityCaseNumber</p><p><b>expression</b>: Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value</p><p><b>sourceId</b>: bundle-create-1</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: patientIdentifier</p><p><b>expression</b>: Bundle.entry.resource.ofType(Patient).identifier.value</p><p><b>sourceId</b>: bundle-create-1</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: ServiceRequestFullUrl</p><p><b>expression</b>: Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl</p><p><b>sourceId</b>: bundle-create-1</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: clinicalImpressionFindingsAmount</p><p><b>expression</b>: Bundle.entry.resource.ofType(ClinicalImpression).finding.count()</p><p><b>sourceId</b>: bundle-create-2</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: clinicalImpressionFindingsAmount</p><p><b>expression</b>: Bundle.entry.resource.ofType(ClinicalImpression).finding.count()</p><p><b>sourceId</b>: bundle-create-3</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: observationFullUrl3</p><p><b>expression</b>: Bundle.entry.where(resource.ofType(Observation)).fullUrl</p><p><b>sourceId</b>: bundle-create-3</p></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: 1 Post ffb-report</p><p><b>description</b>: Post ffb-report</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Destination</b></td><td><b>EncodeRequestUrl</b></td><td><b>Origin</b></td><td><b>SourceId</b></td></tr><tr><td>*</td><td>Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')</td><td>Bundle</td><td>Post a ffb-report</td><td>1</td><td>true</td><td>1</td><td>bundle-create-1</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Resource</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the client request payload contains a Bundle resource type.</td><td>request</td><td>Bundle</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle is of type collection</td><td>request</td><td>Bundle.type</td><td>equals</td><td>collection</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Patient contains an Identifier</td><td>request</td><td>Bundle.entry.resource.ofType(Patient).identifier.exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber</td><td>request</td><td>Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value.exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the ClinicalImpression contains reference to the ServiceRequest MunicipalityCaseNumber</td><td>request</td><td>Bundle.entry.resource.ofType(ClinicalImpression).extension.where(url= 'http://kl.dk/fhir/common/caresocial/StructureDefinition/BasedOnServiceRequest').value.reference</td><td>equals</td><td>${ServiceRequestFullUrl}</td><td>false</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: 2 Post ffb-report</p><p><b>description</b>: Post ffb-report</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Destination</b></td><td><b>EncodeRequestUrl</b></td><td><b>Origin</b></td><td><b>SourceId</b></td></tr><tr><td>*</td><td>Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')</td><td>Bundle</td><td>Post a ffb-report</td><td>1</td><td>true</td><td>1</td><td>bundle-create-2</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Resource</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the client request payload contains a Bundle resource type.</td><td>request</td><td>Bundle</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle is of type collection</td><td>request</td><td>Bundle.type</td><td>equals</td><td>collection</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber</td><td>request</td><td>Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value.exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the ClinicalImpression contains reference to the ServiceRequest MunicipalityCaseNumber</td><td>request</td><td>Bundle.entry.resource.ofType(ClinicalImpression).extension.where(url= 'http://kl.dk/fhir/common/caresocial/StructureDefinition/BasedOnServiceRequest').value.reference</td><td>equals</td><td>${ServiceRequestFullUrl}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Patient Identifier is same as Previous</td><td>request</td><td>Bundle.entry.resource.ofType(Patient).identifier.value</td><td>equals</td><td>${patientIdentifier}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber</td><td>request</td><td>Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value</td><td>equals</td><td>${municipalityCaseNumber}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the ServiceRequest is the same as the first</td><td>request</td><td>Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl</td><td>equals</td><td>${ServiceRequestFullUrl}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Test that there exists at least 1 Condition in the bundle </td><td>request</td><td>Bundle.entry.resource.ofType(Condition).count() &gt; 0</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Make sure the numbers of ClinicalImpression.finding and Conditions is equal </td><td>request</td><td>Bundle.entry.resource.ofType(Condition).count()</td><td>equals</td><td>${clinicalImpressionFindingsAmount}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 4934e45a-0f93-4c23-a767-2b681378700b exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='4934e45a-0f93-4c23-a767-2b681378700b').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition ef4271c4-f942-4194-a2b0-e9a7045eab22 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='ef4271c4-f942-4194-a2b0-e9a7045eab22').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition b93216fa-3843-4a7e-85bc-e3ef35a1967f exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='b93216fa-3843-4a7e-85bc-e3ef35a1967f').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 9959e779-e8ee-47e8-989b-bbff4aae2883 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='9959e779-e8ee-47e8-989b-bbff4aae2883').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition e6f82424-da5a-41d1-bd1a-5796aa79d5f2 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='e6f82424-da5a-41d1-bd1a-5796aa79d5f2').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition f5b8e809-7689-4952-838c-a069c99408b3 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='f5b8e809-7689-4952-838c-a069c99408b3').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 52efa2e9-e0dc-41eb-8c01-9865e2fdebae exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='52efa2e9-e0dc-41eb-8c01-9865e2fdebae').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 7a8f247b-baf8-4552-95bb-acf8ef004b74 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='7a8f247b-baf8-4552-95bb-acf8ef004b74').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 83342ff3-5f2e-4914-b045-e98357685866 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='83342ff3-5f2e-4914-b045-e98357685866').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition df194a84-6e4b-4f14-a194-d8d9d9a1fcad exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='df194a84-6e4b-4f14-a194-d8d9d9a1fcad').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 3f9da5ac-9686-4eeb-b517-b46e17fcb1d7 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='3f9da5ac-9686-4eeb-b517-b46e17fcb1d7').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 464a2ab6-a7df-4b3a-b74d-7873f4cfe668 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='464a2ab6-a7df-4b3a-b74d-7873f4cfe668').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 01770afa-cd17-41fe-a966-b8895e4d55d8 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='01770afa-cd17-41fe-a966-b8895e4d55d8').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition eff3385d-01fa-4c9c-9850-52e179243f21 exist in Bundle</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).code.coding.where(code ='eff3385d-01fa-4c9c-9850-52e179243f21').exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 3f9da5ac-9686-4eeb-b517-b46e17fcb1d7 exist where severity is 5bdde847-2837-416b-ab63-bbff8b7aa531 in Bundle.Condition</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).where(code.coding.code = '3f9da5ac-9686-4eeb-b517-b46e17fcb1d7').severity.coding.code</td><td>equals</td><td>5bdde847-2837-416b-ab63-bbff8b7aa531</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d exist where severity is 8328ce4a-6238-4f73-bf1a-74aadb68eff8 in Bundle.Condition</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).where(code.coding.code = '685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d').severity.coding.code</td><td>equals</td><td>8328ce4a-6238-4f73-bf1a-74aadb68eff8</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 464a2ab6-a7df-4b3a-b74d-7873f4cfe668 exist where severity is cae545f5-2813-4d79-98fc-0a7d770af3cd in Bundle.Condition</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).where(code.coding.code = '464a2ab6-a7df-4b3a-b74d-7873f4cfe668').severity.coding.code</td><td>equals</td><td>cae545f5-2813-4d79-98fc-0a7d770af3cd</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition 01770afa-cd17-41fe-a966-b8895e4d55d8 exist where severity is 5bdde847-2837-416b-ab63-bbff8b7aa531 in Bundle.Condition</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).where(code.coding.code = '01770afa-cd17-41fe-a966-b8895e4d55d8').severity.coding.code</td><td>equals</td><td>5bdde847-2837-416b-ab63-bbff8b7aa531</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Condition eff3385d-01fa-4c9c-9850-52e179243f21 exist where severity is cae545f5-2813-4d79-98fc-0a7d770af3cd in Bundle.Condition</td><td>request</td><td>Bundle.entry.resource.ofType(Condition).where(code.coding.code = 'eff3385d-01fa-4c9c-9850-52e179243f21').severity.coding.code</td><td>equals</td><td>cae545f5-2813-4d79-98fc-0a7d770af3cd</td><td>false</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: 3 Post ffb-report</p><p><b>description</b>: Post ffb-report</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Destination</b></td><td><b>EncodeRequestUrl</b></td><td><b>Origin</b></td><td><b>SourceId</b></td></tr><tr><td>*</td><td>Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')</td><td>Bundle</td><td>Post a ffb-report</td><td>1</td><td>true</td><td>1</td><td>bundle-create-3</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Resource</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the client request payload contains a Bundle resource type.</td><td>request</td><td>Bundle</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle is of type collection</td><td>request</td><td>Bundle.type</td><td>equals</td><td>collection</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber</td><td>request</td><td>Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value.exists()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the ClinicalImpression contains reference to the ServiceRequest MunicipalityCaseNumber</td><td>request</td><td>Bundle.entry.resource.ofType(ClinicalImpression).extension.where(url= 'http://kl.dk/fhir/common/caresocial/StructureDefinition/BasedOnServiceRequest').value.reference</td><td>equals</td><td>${ServiceRequestFullUrl}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Patient Identifier is same as Previous</td><td>request</td><td>Bundle.entry.resource.ofType(Patient).identifier.value</td><td>equals</td><td>${patientIdentifier}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber</td><td>request</td><td>Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value</td><td>equals</td><td>${municipalityCaseNumber}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the ServiceRequest is the same as the first</td><td>request</td><td>Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl</td><td>equals</td><td>${ServiceRequestFullUrl}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Test that there exists at least 1 Condition in the bundle </td><td>request</td><td>Bundle.entry.resource.ofType(Condition).count() &gt; 0</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Make sure the numbers of ClinicalImpression.finding and Conditions is equal </td><td>request</td><td>Bundle.entry.resource.ofType(Condition).count()</td><td>equals</td><td>${clinicalImpressionFindingsAmount}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the CarePlanEvaluationCode is equal to dd628e73-d6c9-4837-a2b8-aa62d73bd6ae</td><td>request</td><td>Bundle.entry.resource.ofType(Observation).value.where(coding.system = 'http://kl.dk/fhir/common/caresocial/CodeSystem/FFB').coding.code</td><td>equals</td><td>dd628e73-d6c9-4837-a2b8-aa62d73bd6ae</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Careplan outcomeReference refference CarePlanEvalution</td><td>request</td><td>Bundle.entry.resource.ofType(CarePlan).activity.outcomeReference.reference</td><td>equals</td><td>${observationFullUrl3}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the changevalue is of taget type funktionsevneniveau</td><td>request</td><td>Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = '8328ce4a-6238-4f73-bf1a-74aadb68eff8').measure.coding.code</td><td>equals</td><td>66959f77-6e2a-4574-8423-3ff097f8b9fa</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the changevalue is of taget type funktionsevneniveau</td><td>request</td><td>Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = 'b508ff66-6326-4862-a6d7-7bbf184c9823').measure.coding.code</td><td>equals</td><td>66959f77-6e2a-4574-8423-3ff097f8b9fa</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the changevalue is of taget type funktionsevneniveau</td><td>request</td><td>Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd').measure.coding.code</td><td>equals</td><td>66959f77-6e2a-4574-8423-3ff097f8b9fa</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the numbers of GoalConditionRank is equal to 5</td><td>request</td><td>Bundle.entry.resource.ofType(Goal).addresses.extension.where(url = 'http://kl.dk/fhir/common/caresocial/StructureDefinition/ConditionRank').count()</td><td>equals</td><td>5</td><td>false</td></tr></table></blockquote></blockquote></div>"
  },
  "url": "http://build.fhir.org/ig/hl7dk/dk-medcom/",
  "version": "0.1.0",
  "name": "First documentation phase",
  "title": "First documentation phase",
  "status": "active",
  "date": "2021-11-01",
  "publisher": "MedCom",
  "contact": [
    {
      "name": "MedCom",
      "telecom": [
        {
          "system": "email",
          "value": "fhir@medcom.dk"
        }
      ]
    }
  ],
  "description": "Testing correct use of First documentation phase",
  "copyright": "MedCom 2021",
  "origin": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types",
        "code": "FHIR-Client"
      }
    }
  ],
  "destination": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
        "code": "FHIR-Server"
      }
    }
  ],
  "fixture": [
    {
      "id": "bundle-create-1",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/01Encounter.xml"
      }
    },
    {
      "id": "bundle-create-2",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/02Encounter.xml"
      }
    },
    {
      "id": "bundle-create-3",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-ffb-reporting/send/Userstory/_reference/resources/03Encounter.xml"
      }
    }
  ],
  "variable": [
    {
      "name": "municipalityCaseNumber",
      "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value",
      "sourceId": "bundle-create-1"
    },
    {
      "name": "patientIdentifier",
      "expression": "Bundle.entry.resource.ofType(Patient).identifier.value",
      "sourceId": "bundle-create-1"
    },
    {
      "name": "ServiceRequestFullUrl",
      "expression": "Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl",
      "sourceId": "bundle-create-1"
    },
    {
      "name": "clinicalImpressionFindingsAmount",
      "expression": "Bundle.entry.resource.ofType(ClinicalImpression).finding.count()",
      "sourceId": "bundle-create-2"
    },
    {
      "name": "clinicalImpressionFindingsAmount",
      "expression": "Bundle.entry.resource.ofType(ClinicalImpression).finding.count()",
      "sourceId": "bundle-create-3"
    },
    {
      "name": "observationFullUrl3",
      "expression": "Bundle.entry.where(resource.ofType(Observation)).fullUrl",
      "sourceId": "bundle-create-3"
    }
  ],
  "test": [
    {
      "id": "ffb-1",
      "name": "1 Post ffb-report",
      "description": "Post ffb-report",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a ffb-report",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "sourceId": "bundle-create-1"
          }
        },
        {
          "assert": {
            "description": "Confirm that the client request payload contains a Bundle resource type.",
            "direction": "request",
            "resource": "Bundle",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle is of type collection",
            "direction": "request",
            "expression": "Bundle.type",
            "operator": "equals",
            "value": "collection",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Patient contains an Identifier",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Patient).identifier.exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value.exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression contains reference to the ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).extension.where(url= 'http://kl.dk/fhir/common/caresocial/StructureDefinition/BasedOnServiceRequest').value.reference",
            "operator": "equals",
            "value": "${ServiceRequestFullUrl}",
            "warningOnly": false
          }
        }
      ]
    },
    {
      "id": "ffb-2",
      "name": "2 Post ffb-report",
      "description": "Post ffb-report",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a ffb-report",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "sourceId": "bundle-create-2"
          }
        },
        {
          "assert": {
            "description": "Confirm that the client request payload contains a Bundle resource type.",
            "direction": "request",
            "resource": "Bundle",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle is of type collection",
            "direction": "request",
            "expression": "Bundle.type",
            "operator": "equals",
            "value": "collection",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value.exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression contains reference to the ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).extension.where(url= 'http://kl.dk/fhir/common/caresocial/StructureDefinition/BasedOnServiceRequest').value.reference",
            "operator": "equals",
            "value": "${ServiceRequestFullUrl}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Patient Identifier is same as Previous",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Patient).identifier.value",
            "operator": "equals",
            "value": "${patientIdentifier}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value",
            "operator": "equals",
            "value": "${municipalityCaseNumber}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ServiceRequest is the same as the first",
            "direction": "request",
            "expression": "Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl",
            "operator": "equals",
            "value": "${ServiceRequestFullUrl}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Test that there exists at least 1 Condition in the bundle ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count() > 0",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Make sure the numbers of ClinicalImpression.finding and Conditions is equal ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count()",
            "operator": "equals",
            "value": "${clinicalImpressionFindingsAmount}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 4934e45a-0f93-4c23-a767-2b681378700b exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='4934e45a-0f93-4c23-a767-2b681378700b').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition ef4271c4-f942-4194-a2b0-e9a7045eab22 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='ef4271c4-f942-4194-a2b0-e9a7045eab22').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition b93216fa-3843-4a7e-85bc-e3ef35a1967f exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='b93216fa-3843-4a7e-85bc-e3ef35a1967f').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 9959e779-e8ee-47e8-989b-bbff4aae2883 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='9959e779-e8ee-47e8-989b-bbff4aae2883').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition e6f82424-da5a-41d1-bd1a-5796aa79d5f2 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='e6f82424-da5a-41d1-bd1a-5796aa79d5f2').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition f5b8e809-7689-4952-838c-a069c99408b3 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='f5b8e809-7689-4952-838c-a069c99408b3').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 52efa2e9-e0dc-41eb-8c01-9865e2fdebae exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='52efa2e9-e0dc-41eb-8c01-9865e2fdebae').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 7a8f247b-baf8-4552-95bb-acf8ef004b74 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='7a8f247b-baf8-4552-95bb-acf8ef004b74').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 83342ff3-5f2e-4914-b045-e98357685866 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='83342ff3-5f2e-4914-b045-e98357685866').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition df194a84-6e4b-4f14-a194-d8d9d9a1fcad exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='df194a84-6e4b-4f14-a194-d8d9d9a1fcad').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 3f9da5ac-9686-4eeb-b517-b46e17fcb1d7 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='3f9da5ac-9686-4eeb-b517-b46e17fcb1d7').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 464a2ab6-a7df-4b3a-b74d-7873f4cfe668 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='464a2ab6-a7df-4b3a-b74d-7873f4cfe668').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 01770afa-cd17-41fe-a966-b8895e4d55d8 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='01770afa-cd17-41fe-a966-b8895e4d55d8').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition eff3385d-01fa-4c9c-9850-52e179243f21 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='eff3385d-01fa-4c9c-9850-52e179243f21').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 3f9da5ac-9686-4eeb-b517-b46e17fcb1d7 exist where severity is 5bdde847-2837-416b-ab63-bbff8b7aa531 in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = '3f9da5ac-9686-4eeb-b517-b46e17fcb1d7').severity.coding.code",
            "operator": "equals",
            "value": "5bdde847-2837-416b-ab63-bbff8b7aa531",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d exist where severity is 8328ce4a-6238-4f73-bf1a-74aadb68eff8 in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = '685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d').severity.coding.code",
            "operator": "equals",
            "value": "8328ce4a-6238-4f73-bf1a-74aadb68eff8",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 464a2ab6-a7df-4b3a-b74d-7873f4cfe668 exist where severity is cae545f5-2813-4d79-98fc-0a7d770af3cd in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = '464a2ab6-a7df-4b3a-b74d-7873f4cfe668').severity.coding.code",
            "operator": "equals",
            "value": "cae545f5-2813-4d79-98fc-0a7d770af3cd",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 01770afa-cd17-41fe-a966-b8895e4d55d8 exist where severity is 5bdde847-2837-416b-ab63-bbff8b7aa531 in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = '01770afa-cd17-41fe-a966-b8895e4d55d8').severity.coding.code",
            "operator": "equals",
            "value": "5bdde847-2837-416b-ab63-bbff8b7aa531",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition eff3385d-01fa-4c9c-9850-52e179243f21 exist where severity is cae545f5-2813-4d79-98fc-0a7d770af3cd in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = 'eff3385d-01fa-4c9c-9850-52e179243f21').severity.coding.code",
            "operator": "equals",
            "value": "cae545f5-2813-4d79-98fc-0a7d770af3cd",
            "warningOnly": false
          }
        }
      ]
    },
    {
      "id": "ffb-3",
      "name": "3 Post ffb-report",
      "description": "Post ffb-report",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a ffb-report",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "sourceId": "bundle-create-3"
          }
        },
        {
          "assert": {
            "description": "Confirm that the client request payload contains a Bundle resource type.",
            "direction": "request",
            "resource": "Bundle",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle is of type collection",
            "direction": "request",
            "expression": "Bundle.type",
            "operator": "equals",
            "value": "collection",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value.exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression contains reference to the ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).extension.where(url= 'http://kl.dk/fhir/common/caresocial/StructureDefinition/BasedOnServiceRequest').value.reference",
            "operator": "equals",
            "value": "${ServiceRequestFullUrl}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Patient Identifier is same as Previous",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Patient).identifier.value",
            "operator": "equals",
            "value": "${patientIdentifier}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value",
            "operator": "equals",
            "value": "${municipalityCaseNumber}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ServiceRequest is the same as the first",
            "direction": "request",
            "expression": "Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl",
            "operator": "equals",
            "value": "${ServiceRequestFullUrl}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Test that there exists at least 1 Condition in the bundle ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count() > 0",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Make sure the numbers of ClinicalImpression.finding and Conditions is equal ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count()",
            "operator": "equals",
            "value": "${clinicalImpressionFindingsAmount}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the CarePlanEvaluationCode is equal to dd628e73-d6c9-4837-a2b8-aa62d73bd6ae",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Observation).value.where(coding.system = 'http://kl.dk/fhir/common/caresocial/CodeSystem/FFB').coding.code",
            "operator": "equals",
            "value": "dd628e73-d6c9-4837-a2b8-aa62d73bd6ae",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Careplan outcomeReference refference CarePlanEvalution",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(CarePlan).activity.outcomeReference.reference",
            "operator": "equals",
            "value": "${observationFullUrl3}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the changevalue is of taget type funktionsevneniveau",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = '8328ce4a-6238-4f73-bf1a-74aadb68eff8').measure.coding.code",
            "operator": "equals",
            "value": "66959f77-6e2a-4574-8423-3ff097f8b9fa",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the changevalue is of taget type funktionsevneniveau",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = 'b508ff66-6326-4862-a6d7-7bbf184c9823').measure.coding.code",
            "operator": "equals",
            "value": "66959f77-6e2a-4574-8423-3ff097f8b9fa",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the changevalue is of taget type funktionsevneniveau",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd').measure.coding.code",
            "operator": "equals",
            "value": "66959f77-6e2a-4574-8423-3ff097f8b9fa",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the numbers of GoalConditionRank is equal to 5",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).addresses.extension.where(url = 'http://kl.dk/fhir/common/caresocial/StructureDefinition/ConditionRank').count()",
            "operator": "equals",
            "value": "5",
            "warningOnly": false
          }
        }
      ]
    }
  ]
}